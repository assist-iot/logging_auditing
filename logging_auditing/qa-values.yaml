# Default values for enabler.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# String to partially override enabler.fullname template (will maintain the release name)
nameOverride: ""
# String to fully override enabler.fullname template
fullnameOverride: ""
# Deploy all the components in the same node
enablerNodeSelector: {}

# Component caorderer values
caorderer:
  tier: external
  image:
    repository: yourRepository
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  replicaCount: 1
  service:
    type: NodePort
    nodePort: ""
    port: 80
    targetPort: 80
    containerPort: 80
    protocol: TCP

  # The specification of the resources is needed for the proper functioning 
  # of the Smart Orchestrator enabler (requests)
  # and of the Resource provisioning enabler (limits)
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  # Include here the environment variables to be used in the component's manifest (container section).
  # Here and in the manifest is included an example.
  envVars:
    exampleEnvVar: exampleValue

  persistence:
    # mountPath: /path/in/container
    accessModes:
      - ReadWriteOnce
    size: 50Mi

  imagePullSecrets: []
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Component caorg1 values
caorg1:
  tier: internal
  image:
    repository: yourRepository
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  replicaCount: 1
  service:
    type: NodePort
    nodePort: ""
    port: 80
    targetPort: 80
    containerPort: 80
    protocol: TCP

  # The specification of the resources is needed for the proper functioning 
  # of the Smart Orchestrator enabler (requests)
  # and of the Resource provisioning enabler (limits)
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  # Include here the environment variables to be used in the component's manifest (container section).
  # Here and in the manifest is included an example.
  envVars:
    exampleEnvVar: exampleValue

  persistence:
    # mountPath: /path/in/container
    accessModes:
      - ReadWriteOnce
    size: 50Mi

  imagePullSecrets: []
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Component caorg2 values
caorg2:
  tier: internal
  image:
    repository: yourRepository
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  replicaCount: 1
  service:
    type: NodePort
    nodePort: ""
    port: 80
    targetPort: 80
    containerPort: 80
    protocol: TCP

  # The specification of the resources is needed for the proper functioning 
  # of the Smart Orchestrator enabler (requests)
  # and of the Resource provisioning enabler (limits)
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  # Include here the environment variables to be used in the component's manifest (container section).
  # Here and in the manifest is included an example.
  envVars:
    exampleEnvVar: exampleValue

  persistence:
    # mountPath: /path/in/container
    accessModes:
      - ReadWriteOnce
    size: 50Mi

  imagePullSecrets: []
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Component orderer values
orderer:
  tier: internal
  image:
    repository: yourRepository
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  replicaCount: 1
  service:
    type: NodePort
    nodePort: ""
    port: 80
    targetPort: 80
    containerPort: 80
    protocol: TCP

  # The specification of the resources is needed for the proper functioning 
  # of the Smart Orchestrator enabler (requests)
  # and of the Resource provisioning enabler (limits)
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  # Include here the environment variables to be used in the component's manifest (container section).
  # Here and in the manifest is included an example.
  envVars:
    exampleEnvVar: exampleValue

  persistence:
    # mountPath: /path/in/container
    accessModes:
      - ReadWriteOnce
    size: 50Mi

  imagePullSecrets: []
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Component orderer2 values
orderer2:
  tier: internal
  image:
    repository: yourRepository
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  replicaCount: 1
  service:
    type: NodePort
    nodePort: ""
    port: 80
    targetPort: 80
    containerPort: 80
    protocol: TCP

  # The specification of the resources is needed for the proper functioning 
  # of the Smart Orchestrator enabler (requests)
  # and of the Resource provisioning enabler (limits)
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  # Include here the environment variables to be used in the component's manifest (container section).
  # Here and in the manifest is included an example.
  envVars:
    exampleEnvVar: exampleValue

  persistence:
    # mountPath: /path/in/container
    accessModes:
      - ReadWriteOnce
    size: 50Mi

  imagePullSecrets: []
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Component orderer3 values
orderer3:
  tier: internal
  image:
    repository: yourRepository
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  replicaCount: 1
  service:
    type: NodePort
    nodePort: ""
    port: 80
    targetPort: 80
    containerPort: 80
    protocol: TCP

  # The specification of the resources is needed for the proper functioning 
  # of the Smart Orchestrator enabler (requests)
  # and of the Resource provisioning enabler (limits)
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  # Include here the environment variables to be used in the component's manifest (container section).
  # Here and in the manifest is included an example.
  envVars:
    exampleEnvVar: exampleValue

  persistence:
    # mountPath: /path/in/container
    accessModes:
      - ReadWriteOnce
    size: 50Mi

  imagePullSecrets: []
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Component peer0org1 values
peer0org1:
  tier: internal
  image:
    repository: yourRepository
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  replicaCount: 1
  service:
    type: NodePort
    nodePort: ""
    port: 80
    targetPort: 80
    containerPort: 80
    protocol: TCP

  # The specification of the resources is needed for the proper functioning 
  # of the Smart Orchestrator enabler (requests)
  # and of the Resource provisioning enabler (limits)
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  # Include here the environment variables to be used in the component's manifest (container section).
  # Here and in the manifest is included an example.
  envVars:
    exampleEnvVar: exampleValue

  persistence:
    # mountPath: /path/in/container
    accessModes:
      - ReadWriteOnce
    size: 50Mi

  imagePullSecrets: []
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Component clipeer0org1 values
clipeer0org1:
  tier: internal
  image:
    repository: yourRepository
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  replicaCount: 1
  service:
    type: NodePort
    nodePort: ""
    port: 80
    targetPort: 80
    containerPort: 80
    protocol: TCP

  # The specification of the resources is needed for the proper functioning 
  # of the Smart Orchestrator enabler (requests)
  # and of the Resource provisioning enabler (limits)
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  # Include here the environment variables to be used in the component's manifest (container section).
  # Here and in the manifest is included an example.
  envVars:
    exampleEnvVar: exampleValue

  persistence:
    # mountPath: /path/in/container
    accessModes:
      - ReadWriteOnce
    size: 50Mi

  imagePullSecrets: []
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Component peer0org2 values
peer0org2:
  tier: internal
  image:
    repository: yourRepository
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  replicaCount: 1
  service:
    type: NodePort
    nodePort: ""
    port: 80
    targetPort: 80
    containerPort: 80
    protocol: TCP

  # The specification of the resources is needed for the proper functioning 
  # of the Smart Orchestrator enabler (requests)
  # and of the Resource provisioning enabler (limits)
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  # Include here the environment variables to be used in the component's manifest (container section).
  # Here and in the manifest is included an example.
  envVars:
    exampleEnvVar: exampleValue

  persistence:
    # mountPath: /path/in/container
    accessModes:
      - ReadWriteOnce
    size: 50Mi

  imagePullSecrets: []
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Component clipeer0org2 values
clipeer0org2:
  tier: internal
  image:
    repository: yourRepository
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  replicaCount: 1
  service:
    type: NodePort
    nodePort: ""
    port: 80
    targetPort: 80
    containerPort: 80
    protocol: TCP

  # The specification of the resources is needed for the proper functioning 
  # of the Smart Orchestrator enabler (requests)
  # and of the Resource provisioning enabler (limits)
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  # Include here the environment variables to be used in the component's manifest (container section).
  # Here and in the manifest is included an example.
  envVars:
    exampleEnvVar: exampleValue

  persistence:
    # mountPath: /path/in/container
    accessModes:
      - ReadWriteOnce
    size: 50Mi

  imagePullSecrets: []
  nodeSelector: {}
  tolerations: []
  affinity: {}

createcerts:
  image:
    repository: yourRepository
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  restartPolicy: Never
  backoffLimit: 6


  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  # Include here the environment variables to be used in the job's manifest (container section).
  # Here and in the manifest is included an example.
  envVars:
    exampleEnvVar: exampleValue

  imagePullSecrets: []
  nodeSelector: {}
  tolerations: []
  affinity: {}

artifacts:
  image:
    repository: yourRepository
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  restartPolicy: Never
  backoffLimit: 6


  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  # Include here the environment variables to be used in the job's manifest (container section).
  # Here and in the manifest is included an example.
  envVars:
    exampleEnvVar: exampleValue

  imagePullSecrets: []
  nodeSelector: {}
  tolerations: []
  affinity: {}

